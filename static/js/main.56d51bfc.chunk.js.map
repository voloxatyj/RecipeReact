{"version":3,"sources":["setup-files-react-recipe-project/tempList.js","components/Recipe.js","components/RecipeSearch.js","setup-files-react-recipe-project/tempDetails.js","components/RecipeList.js","components/RecipeDetails.js","App.js","serviceWorker.js","index.js"],"names":["recipes","recipe_id","image_url","title","publisher","source_url","Recipe","this","props","handleDetails","Fragment","className","src","style","height","alt","onClick","href","target","rel","Component","RecipeSearch","value","handleSubmit","handleChange","onSubmit","htmlFor","type","name","placeholder","onChange","recipe","f2f_url","ingredients","publisher_url","RecipeList","console","log","error","map","item","key","RecipeDetails","state","url","id","fetch","data","json","jsonData","setState","handleIndex","index","App","base_url","details_id","pageIndex","search","query","displayPage","e","preventDefault","getRecipes","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.56d51bfc.chunk.js","sourcesContent":["export const recipes = [\r\n  {\r\n    recipe_id: 35382,\r\n    image_url:\r\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\r\n    publisher: \"Closet Cooking\",\r\n    source_url:\r\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n  },\r\n  {\r\n    recipe_id: 35383,\r\n    image_url:\r\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\r\n    publisher: \"Closet Cooking\",\r\n    source_url:\r\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n  },\r\n  {\r\n    recipe_id: 35384,\r\n    image_url:\r\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\r\n    publisher: \"Closet Cooking\",\r\n    source_url:\r\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n  }\r\n];\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Recipe extends Component {\r\n  render() {\r\n    const {\r\n      image_url,\r\n      title,\r\n      source_url,\r\n      publisher,\r\n      recipe_id\r\n    } = this.props.recipes;\r\n    const { handleDetails } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div className='col-10 mx-auto col-md-6 col-lg-4 my-3'>\r\n          <div className='card'>\r\n            <img\r\n              src={image_url}\r\n              className='img-card-top'\r\n              style={{ height: \"14rem\" }}\r\n              alt='recipe'\r\n            />\r\n            <div className='card-body text-capitalize'>\r\n              <h6>{title}</h6>\r\n              <h6 className='text-warning text-slanted'>\r\n                provided by {publisher}\r\n              </h6>\r\n            </div>\r\n            <div className='card-footer'>\r\n              <button className='btn btn-primary text' onClick={handleDetails}>\r\n                details\r\n              </button>\r\n              <a\r\n                href={source_url}\r\n                className='btn btn-success mx-2 text-capitalize'\r\n                target='_blank'\r\n                rel='noopener noreferrer'>\r\n                recipe url\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class RecipeSearch extends Component {\r\n  render() {\r\n    const { value, handleSubmit, handleChange } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col-10 mx-auto col-md-8 mt-5 text-center'>\r\n              <h1 className='text-slanted text-capitalize'>\r\n                search for recipe with{\" \"}\r\n                <strong className='text-danger'>Food2Fork</strong>\r\n              </h1>\r\n              <form className='mt-4' onSubmit={handleSubmit}>\r\n                <label htmlFor='search' className='text-capitalize'>\r\n                  type recipes seperated by coma\r\n                </label>\r\n                <div className='input-group'>\r\n                  <input\r\n                    type='text'\r\n                    name='search'\r\n                    placeholder='chicken,onions,carrots'\r\n                    className='form-control'\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <div className='input-group-append'>\r\n                    <button\r\n                      className='input-group-text bg-primary text-white'\r\n                      type='submit'>\r\n                      <i className='fas fa-search' />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","export const recipe = {\r\n  f2f_url: \"http://food2fork.com/view/35382\",\r\n  image_url:\r\n    \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n  ingredients: [\r\n    \"2 jalapeno peppers, cut in half lengthwise and seeded\",\r\n    \"2 slices sour dough bread\",\r\n    \"1 tablespoon butter, room temperature\",\r\n    \"2 tablespoons cream cheese, room temperature\",\r\n    \"1/2 cup jack and cheddar cheese, shredded\",\r\n    \"1 tablespoon tortilla chips, crumbled\"\r\n  ],\r\n  publisher: \"Closet Cooking\",\r\n  publisher_url: \"http://closetcooking.com\",\r\n  source_url:\r\n    \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\",\r\n  title: \"Jalapeno Popper Grilled Cheese Sandwich\"\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Recipe from \"./Recipe\";\r\nimport RecipeSearch from \"./RecipeSearch\";\r\nimport { recipe } from \"../setup-files-react-recipe-project/tempDetails\";\r\n\r\nexport default class RecipeList extends Component {\r\n  render() {\r\n    console.log(this.props.recipes);\r\n    const {\r\n      recipes,\r\n      handleDetails,\r\n      value,\r\n      handleSubmit,\r\n      handleChange,\r\n      error\r\n    } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <RecipeSearch\r\n          value={value}\r\n          handleSubmit={handleSubmit}\r\n          handleChange={handleChange}\r\n        />\r\n        <div className='container my-5'>\r\n          {/* title */}\r\n          <div className='row'>\r\n            <div className='col-10 mx-auto col-md-6 text-uppercase text-center mb-3'>\r\n              <h1 className='text-slanted'>recipe list</h1>\r\n            </div>\r\n          </div>\r\n          {/* end of title */}\r\n          <div className='row'>\r\n            {recipes.map(item => {\r\n              return (\r\n                <Recipe\r\n                  key={item.recipe_id}\r\n                  recipes={item}\r\n                  handleDetails={() => {\r\n                    handleDetails(0, recipe.recipe_id);\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { recipe } from \"../setup-files-react-recipe-project/tempDetails\";\r\n\r\nexport default class RecipeDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      recipes: recipe,\r\n      url: `https://www.food2fork.com/api/get?key=f6acc14d69a8a5af1efdfebbd485fc1f&rId=${this.props.id}`\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const data = await fetch(this.state.url);\r\n      const jsonData = await data.json();\r\n      this.setState({\r\n        recipe: jsonData.recipe\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  render() {\r\n    const {\r\n      image_url,\r\n      publisher,\r\n      publisher_url,\r\n      source_url,\r\n      title,\r\n      ingredients\r\n    } = this.state.recipes;\r\n    const { handleIndex } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            <div className='col-10 mx-auto col-md-6 my-3'>\r\n              <button\r\n                className='btn btn-warning mb-5 text-capitalize'\r\n                onClick={() => {\r\n                  handleIndex(1);\r\n                }}>\r\n                back to recipe list\r\n              </button>\r\n              <img src={image_url} className='d-block w-100' alt='recipe' />\r\n            </div>\r\n            {/* details */}\r\n            <div className='col-10 mx-auto col-md-6 my-3'>\r\n              <h6 className='text-uppercase'>{title}</h6>\r\n              <h6 className='text-warning text-capitalize text-slanted'>\r\n                provided by {publisher}\r\n              </h6>\r\n              <a\r\n                href={publisher_url}\r\n                target='_blank'\r\n                rel='noopener noreferrer'\r\n                className='btn btn-primary mt-2 text-capitalize'>\r\n                recipe url\r\n              </a>\r\n              <ul className='list-group mt-4'>\r\n                <h2 className='mt-3 mb-4'>Ingredients</h2>\r\n                {ingredients.map((item, index) => {\r\n                  return (\r\n                    <li key={index} className='list-group-item text-slanted'>\r\n                      {item}\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { recipes } from \"./setup-files-react-recipe-project/tempList\";\nimport RecipeList from \"./components/RecipeList\";\nimport RecipeDetails from \"./components/RecipeDetails\";\n\nclass App extends Component {\n  state = {\n    recipes: recipes,\n    url:\n      \"https://www.food2fork.com/api/search?key=f6acc14d69a8a5af1efdfebbd485fc1f\",\n    base_url:\n      \"https://www.food2fork.com/api/search?key=f6acc14d69a8a5af1efdfebbd485fc1f\",\n    details_id: 35386,\n    pageIndex: 1,\n    search: \"\",\n    query: \"&q=\",\n    error: \"\"\n  };\n\n  async getRecipes() {\n    const data = await fetch(this.state.url);\n    const jsonData = await data.json();\n    this.setState({\n      recipes: jsonData.recipes\n    });\n  }\n\n  componentDidMount() {\n    this.getRecipes();\n  }\n\n  displayPage = index => {\n    switch (index) {\n      default:\n      case 1:\n        return (\n          <RecipeList\n            recipes={this.state.recipes}\n            handleDetails={this.handleDetails}\n            value={this.state.search}\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n            error={this.state.error}\n          />\n        );\n      case 0:\n        return (\n          <RecipeDetails\n            id={this.state.details_id}\n            handleIndex={this.handleIndex}\n          />\n        );\n    }\n  };\n\n  handleIndex = index => {\n    this.setState({\n      pageIndex: index\n    });\n  };\n  handleDetails = (index, id) => {\n    this.setState({\n      pageIndex: index,\n      details_id: id\n    });\n  };\n  handleChange = e => {\n    this.setState({\n      search: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const { base_url, query, search } = this.state;\n    this.setState(\n      () => {\n        return { url: `${base_url}${query}${search}`, search: \"\" };\n      },\n      () => {\n        this.getRecipes();\n      }\n    );\n  };\n\n  render() {\n    return (\n      <React.Fragment>{this.displayPage(this.state.pageIndex)}</React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}